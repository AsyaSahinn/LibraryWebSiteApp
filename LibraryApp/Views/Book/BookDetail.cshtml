@using LibraryApp.Models.Entity;
@model LibraryApp.Models.Entity.Book

@{
    ViewData["Title"] = "Book Detail";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        .book-details {
            display: flex;
            justify-content: space-between;
            align-items: center;
        
        }
        
        .book-image {
            max-width: 300px;
            max-height: 100px;
        }
        
        #borrowDetails {
            margin-top: 20px;
        }
        
        #borrowDetails table {
            width: 100%;
            border-collapse: collapse;
        }

            
        #borrowDetails th,
        #borrowDetails td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h2>@ViewData["Title"]</h2>

    <div class="book-details">
        <div class="book-info">
            <h3>Book Name:@Model.Name</h3>
            <p>Author: @Model.Author</p>
            @*<p>Is Borrowed: @(Model.IsBorrow ? "Yes" : "No")</p>*@
        </div>
        <div class="book-image">
            <img src="/BookImages/askveoburcinler.jpeg" alt="Book Image" class="book-image" />
        </div>
    </div>

    @if (!Model.IsBorrow)
    {
        
                <div id="borrowForm">
                    <h4>Borrow this Book</h4>
                    <form asp-controller="BorrowBook" asp-action="AddBorrowBook" method="post">
                        <div class="form-group">
                            <label for="UserName">User Name:</label>
                            <input type="text" class="form-control" id="UserName" name="UserName" />
                        </div>
                        <div class="form-group">
                            <label for="UserSurname">User Surname:</label>
                            <input type="text" class="form-control" id="UserSurname" name="UserSurname" />
                        </div>
                        <div class="form-group">
                            <label for="DueDate">Due Date</label>
                            <input type="datetime-local" class="form-control" id="DueDate" name="DueDate" />
                        </div>
                        <input type="hidden" name="bookId" value="@Model.Id" />
                <div class="mt-3" style=" padding: 10px;">
                    <button type="submit" class="btn btn-primary">Borrow</button>
                </div>
                       
                    </form>
                </div>
        <div class="mt-3" style="padding: 10px;">
            <a asp-controller="Book" asp-action="GetBookList" class="btn btn-primary btn-block">View Book List</a>
        </div>
          
    }
    else
    {
        <div id="borrowDetails">
            <h4>Borrow Details</h4>
            <table>
                <tr>
                    <th>User Name</th>
                    <td><span id="userName"></span></td>
                </tr>
                <tr>
                    <th>User Surname</th>
                    <td><span id="userSurname"></span></td>
                </tr>
                <tr>
                    <th>Borrow Date</th>
                    <td><span id="borrowDate"></span></td>
                </tr>
                <tr>
                    <th>Due Date</th>
                    <td><span id="dueDate"></span></td>
                </tr>
            </table>
        </div>
        <div class="mt-3" style="padding: 10px;">
            <a asp-controller="Book" asp-action="GetBookList" class="btn btn-primary btn-block">View Book List</a>
        </div>

     
            <script>
                async function fetchBorrowDetails(bookId) {
                    const response = await fetch(`GetBorrowBookDetailByBookId?bookId=${bookId}`);
                    const data = await response.json();
                    return data;
                }

            const bookId = @Model.Id;
            fetchBorrowDetails(bookId)
                .then(data => {
                    document.getElementById('userName').textContent = data.userName;
                    document.getElementById('userSurname').textContent = data.userSurname;
                    document.getElementById('borrowDate').textContent = data.borrowDate;
                    document.getElementById('dueDate').textContent = data.dueDate;
            @*  document.getElementById('returnDate').textContent = data.returnDate || '';*@
                            });
        </script>
        
    }
</body>
</html>

